{% extends 'base.html.twig' %}


{% block stylesheets %}
  <link href="{{ asset('css/select2.min.css') }}" rel="stylesheet" />
{% endblock %}


{% block title %}
  Enregistrement de vente à partir du {{ store.name }}
{% endblock %}


{% block notifications %}
  {% for message in app.flashes('success') %}
    <div class="alert alert-success fade in">
      <a href="#" class="close" data-dismiss="alert">&times;</a>
      <strong>Succès</strong><br>
      {{ message|raw }}
    </div>
  {% endfor %}
  {% for message in app.flashes('warning') %}
    <div class="alert alert-warning fade in">
      <a href="#" class="close" data-dismiss="alert">&times;</a>
      <strong>Attention !!!</strong><br>
      {{ message|raw }}
    </div>
  {% endfor %}
  {% for message in app.flashes('danger') %}
    <div class="alert alert-danger fade in">
      <a href="#" class="close" data-dismiss="alert">&times;</a>
      <strong>Erreur</strong><br>
      {{ message|raw }}
    </div>
  {% endfor %}
{% endblock %}


{% block body %}
  <a href="javascript:history.back()" class="btn btn-primary btn-sm">Retour</a>
  <h2 class="animate-box" data-animate-effect="fadeInLeft">Enregistrement d'une nouvelle vente à partir du <strong>{{ store.name }}</strong></h2>
  <form class="text-sm">
    <legend>Ajoute de produit au pannier</legend>
    <div class="row">
      <div class="form-group col-md-3 col-sm-3 col-xs-3">
        <label for="codebarre" class="col-form-label">Code barre</label>
        <input type="text" name="codebarre" class="form-control" id="codebarre">
      </div>
      <div class="form-group col-md-3 col-sm-3 col-xs-3">
        <label for="reference" class="col-form-label">Référence de produit</label>
        <input type="text" name="reference" class="form-control" id="reference" value="PR">
      </div>
      <div class="form-group col-md-6 col-sm-6 col-xs-6">
        <label for="products" class="col-form-label">Produits</label>
        {# <select name="products" id="products" class="form-control"> #}
        <select name="products" id="products" class="form-control mb-4 js-example-basic-single">
          <option value="">Sélectionnez un produit</option>
          {% for product in stocks if product.quantity > 0 %}
            <option value="{{ product.product.id }}">{{ product.product.reference }} --- {{ product.product.label }}</option>
          {% endfor %}
        </select>
      </div>
    </div>
    <div class="row">
      <div class="form-group col-md-4 col-sm-4 col-xs-4">
        <label for="venduPar" class="col-form-label">Vente par:</label>
        <select name="venduPar" id="venduPar" class="form-control" required>
          <option value="1" selected>Unité</option>
          <option value="2">Carton / paquet</option>
        </select>
      </div>
      <div class="form-group col-md-4 col-sm-4 col-xs-4">
        <label for="quantity" class="col-form-label">Quantité:</label>
        <input type="number" class="form-control" id="quantity" value="1" min="1" required>
      </div>
      <div class="form-group col-md-4 col-sm-4 col-xs-4">
        <label for="price" class="col-form-label">Prix unitaire:</label>
        <input type="number" class="form-control" id="price" value="" required>
      </div>
    </div>
    <div class="form-group text-center"><div id="notif"><p style="color: red; font-weight: bolder"></p></div></div>
    <div class="modal-footer">
      <input type="hidden" name="productId" id="productId" value="">
      <input type="hidden" name="averagePurchasePrice" id="averagePurchasePrice" value="">
      <input type="hidden" name="averageSellingPrice" id="averageSellingPrice" value="">
      <input type="hidden" name="averagePackageSellingPrice" id="averagePackageSellingPrice" value="">
      <input type="hidden" name="prixUnitaire" id="prixUnitaire" value="">
      <input type="hidden" name="prixUnitaireCarton" id="prixUnitaireCarton" value="">
      <input type="hidden" name="nombreUnite" id="nombreUnite" value="">
      <input type="hidden" name="productLabel" id="productLabel" value="">
      <input type="hidden" name="productStock" id="productStock" value="">
      <input type="hidden" name="storeId" id="storeId" value="{{ store.id }}">
      <button class="btn-lg btn-primary" id="add_product">Ajouter</button>
    </div>
  </form>
  <form class="form" action="" method="post" id="myForm">
    <br>
    <div class="row">
      <div class="form-group col-md-6">
        <label for="customer">Client</label>
        <select name="customer" id="customer" class="form-control mb-4 js-example-basic-single" required>
          <option value="">Sélectionner un client</option>
          {% for customer in customers if customer.isDeleted == 0 %}
            <option value="{{ customer.id }}" {% if customer.id == 1 %}selected{% endif %}>{{ customer.reference }} --- {{ customer.nom }} {{ customer.phoneNumber }}</option>
          {% endfor %}
        </select>
      </div>
      <div class="form-group col-md-2">
        <label for="date">Date de la commande</label><br>
        <input type="date" name="date" id="date" min="{{ 'now'|date('Y-m-d') }}" value="{{ 'now'|date('Y-m-d') }}" required>
      </div>
      <div class="form-group col-md-2">
        <label for="tva">TVA</label><br>
        <select name="tva" id="tva" required>
          <option value="">Sélectionner un taux</option>
          <option value="0" selected>0%</option>
          <option value="18">18%</option>
        </select>
      </div>
      <div class="form-group col-md-2">
        <label for="remise">Remise</label><br>
        <input type="number" name="remise" id="remise" value="0" required>
      </div>
    </div>
    {% set i = 0 %}
    <div class="table-responsive">
      <table class="table" id="myTable">
        <thead>
          <tr>
            <th>Référence</th>
            <th>Produit</th>
            <th>Quantité</th>
            <th>Prix Unitaire</th>
            <th>Sous total</th>
            <th>Actions</th>
          </tr>
        </thead>
        {% set total = 0 %}
        <tbody>
          {# <tr><td>Reference</td><td>label</td><td><input type="number" class="quantity" id="quantities[]" name="quantities[]" value="" required readonly></td><td><input type="number" class="price" id="prices[]" name="prices[]" value="" required readonly></td><td><input type="number" class="sousTotal" id="sousTotal[]" name="sousTotal[]" value="" readonly><input type="hidden" name="products[]" value=""></td><td><i class="icon-trash" title="Retirer de la vente en cours"></i></td></tr> #}
          <tr></tr>
        </tbody>
        <tfoot>
          <tr>
            <td colspan="4"><span style="font-size: 1.5em; font-weight: bold;">Total de la commande (HT)</span></td>
            <td><input type="text" id="total" name="total" value="" readonly required></td>
          </tr>
          <tr>
            <td colspan="4"><span style="font-size: 1.5em; font-weight: bold;">Valeur TVA</span></td>
            <td><input type="text" id="montantTva" name="montantTva" value="" readonly required></td>
          </tr>
          <tr>
            <td colspan="4"><span style="font-size: 1.5em; font-weight: bold;">Montant TTC</span></td>
            <td><input type="text" id="ttc" name="ttc" value="" readonly required></td>
          </tr>
          <tr>
            <td colspan="4"><span style="font-size: 1.5em; font-weight: bold;">Net à payer</span></td>
            <td><input type="text" id="net" name="net" value="" readonly required></td>
          </tr>
        </tfoot>
      </table>
    </div>
    <hr style="border: 3px;">
    <h3>Règlement</h3>
    <div class="row">
      <div class="col-md-4">
        <label for="creance">Accordé une créance</label>
        <select name="creance" id="creance" class="form-control" required>
          <option value="1">Oui</option>
          <option value="2" selected>Non</option>
        </select>
      </div>
      <div class="col-md-4">
        <label for="mode">Mode de paiement</label>
        <select name="mode" id="mode" class="form-control" required>
          <option value="1" selected>Espèce</option>
          <option value="2">Virement</option>
          <option value="3">Acompte client</option>
          <option value="4">Services Mobile Money</option>
          {# <option value="5">Créances</option> #}
        </select>
      </div>
      <div class="col-md-4">
        <label for="amount">Montant règlement</label>
        <input type="integer" id="amount" name="amount" class="form-control" required>
      </div>
    </div><br>
    <input type="hidden" name="token" value="{{ csrf_token('vente') }}"/>
    <input type="submit" class="btn-default btn-lg" id="save" value="Enregistrer" onclick="submitForm(this);">
  </form>
{% endblock %}


{% block javascript %}
  <script>
    $(document).ready(function(){
      var total = $("#total").val();
      var productsId = [];
      var storeId = $("#storeId").val();
      // $("#save").on("click", function(){
      //   if(!$("#customer").val());
      //   break;
      // })
      // var test = $('#test').data("isTest")
      // A chaque fois qu'on sélectionne un produit
      $('#products').on('change',function(e){
        // console.log("test");
        $.ajax({
          url: '/ventes/select-product/' + this.value + '/' + storeId,
          type: 'GET',
          dataType: 'json',
          success: function (result) { 
              var vente_par = $("#venduPar").val();
              $("#price").val(result.unit_price);
              if(vente_par == 2){
                // $("#price").val(result.unit_price * result.unite);
                $("#price").val(result.average_package_selling_price);
              }          
              $("#productId").val(result.id);
              $("#reference").val(result.reference);
              $("#productLabel").val(result.label);
              $("#prixUnitaire").val(result.unit_price);
              $("#averageSellingPrice").val(result.average_selling_price);
              $("#averagePurchasePrice").val(result.average_purchase_price);
              $("#averagePackageSellingPrice").val(result.average_package_selling_price);
              $("#nombreUnite").val(result.unite);
              $("#productStock").val(result.stock);
              $("#quantity").val(1);
              $("#quantity").focus();
              $("#quantity").select();
              $("#notif p").text(result.reference + ' --- ' + result.label + ': ' + result.stock + ' disponibles');
              $("#notif p").css("color", "green");
          },
          error: function (xhr, status, error) {
            $("#products").val(null);
            $("#price").val(null);
            $("#quantity").val(1);
            $("#notif p").text('Désolé ! Le serveur de données a rencontré un problème.');
            $("#notif p").css("color", "red");
            console.log(error)
          }
        });
      });


      $("#reference").on("paste input", function(){
        if($(this).val().length >= 5){
          var ref = $(this).val();
          $.ajax({
            url: '/ventes/select-product-by-reference/' + ref + '/' + storeId,
            type: 'GET',
            dataType: 'json',
            success: function (result) { 
              if(result.length != 0 && result.stock != 0) 
              {
                var vente_par = $("#venduPar").val();
                $("#price").val(result.unit_price);
                if(vente_par == 2){
                  // $("#price").val(result.unit_price * result.unite);
                  $("#price").val(result.average_package_selling_price);
                } 
                $("#productId").val(result.id);
                $("#productLabel").val(result.label);
                $("#prixUnitaire").val(result.unit_price);
                $("#averageSellingPrice").val(result.average_selling_price);
                $("#averagePurchasePrice").val(result.average_purchase_price);
                $("#averagePackageSellingPrice").val(result.average_package_selling_price);
                $("#nombreUnite").val(result.unite);
                $("#productStock").val(result.stock);
                $("#quantity").val(1);
                $("#quantity").focus();
                $("#quantity").select();
                $('#products option[value="'+ result.id +'"]').attr('selected', 'selected');
                $("#notif p").text(result.reference + ' --- ' + result.label + ': ' + result.stock + ' disponibles');
                $("#notif p").css("color", "green");
              } 
              else if(result.length != 0 && result.stock == 0) {
                $("#notif p").text('Stock de (' + result.label + ') épuisé.');
                $("#notif p").css("color", "red");
              } 
              else{
                $("#notif p").text('Référence (' + ref + ') incorrecte.');
                $("#notif p").css("color", "red");
              }
            },
            error: function (xhr, status, error) {
              $("#products").val(null);
              $("#price").val(null);
              $("#quantity").val(1);
              $("#notif p").text('Référence (' + ref + ') incorrecte.');
              $("#notif p").css("color", "red");
              console.log(error)
            }
          });
        } else {
          $(".nomFr").val('');
          $(".pnomFr").val('');
          $(".dateNaissance").val('');
        }
      });

      var barcode="";
      $('#codebarre').on({
          keydown: function(e) { 
            // typed_into = true;             
            var code = (e.keyCode ? e.keyCode : e.which);
            if(code==13){
              console.log(barcode);
              this.value = barcode
              $.ajax({
                url: '/ventes/select-product-by-barcode/' + barcode + '/' + storeId,
                type: 'GET',
                dataType: 'json',
                success: function (result) { 
                  if(result.length !== 0 && result.stock !== 0 && result.reference != undefined) {
                    // if(jQuery.inArray(id, productsId) !== -1){
                    //   $("#notif p").text('Ce produit (' + label + ') a déjà été ajouté à la commande en cours');
                    //   $("#notif p").css("color", "red");
                    // }
                    // else{
                      
                    // }
                    var vente_par = $("#venduPar").val();
                    $("#price").val(result.unit_price);
                    if(vente_par == 2){
                      // $("#price").val(result.unit_price * result.unite);
                      $("#price").val(result.average_package_selling_price);
                    } 
                    $("#reference").val(result.reference);
                    $("#productId").val(result.id);
                    $("#productLabel").val(result.label);
                    $("#prixUnitaire").val(result.unit_price);
                    $("#averageSellingPrice").val(result.average_selling_price);
                    $("#averagePurchasePrice").val(result.average_purchase_price);
                    $("#averagePackageSellingPrice").val(result.average_package_selling_price);
                    $("#nombreUnite").val(result.unite);
                    $("#productStock").val(result.stock);
                    $("#quantity").val(1);
                    $("#quantity").focus();
                    $("#quantity").select();
                    $('#products option[value="'+ result.id +'"]').attr('selected', 'selected');
                    $("#notif p").text(result.reference + ' --- ' + result.label + ': ' + result.stock + ' disponibles');
                    $("#notif p").css("color", "green");
                  } 
                  else if(result.length != 0 && result.stock == 0) {
                    $("#notif p").text('Stock de (' + result.label + ') épuisé.');
                    $("#notif p").css("color", "red");
                  } 
                  else{
                    $("#notif p").text('Code barre incorrect ou inexistant.');
                    $("#notif p").css("color", "red");
                  }
                },
                error: function (xhr, status, error) {
                  $("#products").val(null);
                  $("#price").val(null);
                  $("#quantity").val(1);
                  $("#notif p").text('Référence (' + ref + ') incorrecte.');
                  $("#notif p").css("color", "red");
                }
              });
              barcode = "";
            }
            else{
              barcode=barcode+String.fromCharCode(code);
            }
          },
          // keydown: function(){ alert('test'); },
          change: function() {
              if (typed_into) {
                  alert('type');
                  typed_into = false; //reset type listener
              } else {
                  alert('not type');
              }
          }
      });

      // A chaque fois que la quantité change
      $('#add_product').on('click', function(e){
        var id                         = parseInt($("#productId").val());
        var reference                  = $("#reference").val();
        var unite                      = parseInt($("#nombreUnite").val());
        var venduPar                   = parseInt($("#venduPar").val());
        var label                      = $("#productLabel").val();
        var stock                      = parseInt($("#productStock").val());
        var price                      = parseInt($("#price").val());
        var sellingPrice               = parseInt($("#prixUnitaire").val());
        var quantity                   = parseFloat($("#quantity").val());        
        var averageSellingPrice        = parseInt($("#averageSellingPrice").val());        
        var averagePurchasePrice       = parseInt($("#averagePurchasePrice").val());        
        var averagePackageSellingPrice = parseInt($("#averagePackageSellingPrice").val());        
        // console.log(averageSellingPrice, averagePackageSellingPrice);        
        
        if(price == undefined || price == null || price == 0){
          $("#notif p").text('Le prix de vente n\'a pas été précisé.');
          $("#notif p").css("color", "red");
          return false;
        }
        // if(price > sellingPrice && unite == 1){
        //   $("#notif p").text('Le prix de vente est plus élevé que la normale (' + sellingPrice + 'F).');
        //   $("#notif p").css("color", "red");
        //   return false;
        // }
        if(price < averageSellingPrice && unite == 1){
          $("#notif p").text(label + ' ne peut être vendu en deça de ' + averageSellingPrice + 'F.');
          $("#notif p").css("color", "red");
          
          return false;
        }
        if(price < averagePurchasePrice && unite == 1){
          $("#notif p").text(label + ' ne peut être vendu en deça de ' + averagePurchasePrice + 'F.');
          $("#notif p").css("color", "red");
          console.log(price, averageSellingPrice, averagePurchasePrice);
          
          return false;
        }
        if(unite != 1){
          if(price < averageSellingPrice && venduPar == 1){
            $("#notif p").text(label + ' ne peut être vendu en deça de ' + averageSellingPrice + 'F.');
            $("#notif p").css("color", "red");
            return false;
          }
          if(price < averagePackageSellingPrice && venduPar == 2){
            $("#notif p").text(label + ' ne peut être vendu en deça de ' + averagePackageSellingPrice + 'F.');
            $("#notif p").css("color", "red");
            return false;
          }
        }
        if(quantity == undefined || quantity == null || quantity == 0){
          $("#notif p").text('La quantité à vendre n\'a pas été précisée.');
          $("#notif p").css("color", "red");
          return false;
        }
        if((quantity % 0.5) != 0){
          $("#notif p").text('Quantité saisie incorrecte. Veuillez rééssayer');
          $("#notif p").css("color", "red");
          return false;
        }
        // return false;

        if(jQuery.inArray(id, productsId) !== -1){
          $("#notif p").text('Ce produit (' + label + ') a déjà été ajouté à la commande en cours');
          $("#notif p").css("color", "red");
          // return undefined;
          // throw new Error("Impossible");
        }
        else{
          if(quantity <= stock){
            productsId.push(id);
            console.log(productsId);
            var sousTotal = quantity * price; 
            var vente_par = unite == 1 ? 1 : venduPar;               
            stockMax = venduPar == 1 ? stock : Math.floor(stock / unite);
            console.log("Nombre de cartons = " + stockMax);
            // $("#myTable tbody tr:last").after('<tr><td>' + reference + '</td><td>' + label + '</td><td><input type="number" class="quantity" id="quantities[' + id + ']" name="quantities[' + id + ']" value="' + quantity + '" required readonly></td><td><input type="number" class="price" id="prices[' + id + ']" name="prices[' + id + ']" value="' + price + '" required readonly></td><td><input type="number" class="sousTotal" id="sousTotal[' + id + ']" name="sousTotal[' + id + ']" value="' + sousTotal + '" readonly><input type="hidden" name="products[]" value="' + id + '"></td><td></td></tr>');
            $("#myTable tbody tr:last").after('<tr id="tableLineId' + id + '"><td>' + reference + '</td><td>' + label + '</td><td><input type="number" data="' + id + '" class="setQuantity" id="quantities[' + id + ']" name="quantities[' + id + ']" value="' + quantity + '" max="' + stockMax + '" required></td><td><input type="number" data="' + id + '" class="setPrice" id="prices[' + id + ']" name="prices[' + id + ']" value="' + price + '" required></td><td><input type="number" class="sousTotal" id="sousTotal[' + id + ']" name="sousTotal[' + id + ']" value="' + sousTotal + '" readonly><input type="hidden" id="ventePar[' + id + ']" name="ventePar[' + id + ']" value="' + vente_par + '"><input type="hidden" name="products[]" value="' + id + '"></td><td><i class="icon-trash" id="' + id + '" title="Retirer ' + label + ' de la vente en cours" onclick="$.fn.deleteProduct(' + id + ')"></i></td></tr>');
            $("#products").val(null);
            $("#reference").val("PR");
            $("#price").val(null);
            $("#quantity").val(1);
            $('#products option[value="'+ id +'"]').remove();
            $("#notif p").text('');
            $("#total").val($.fn.calculateTotal())
            var t = eval($("#total").val())
            var tva = eval($("#tva").val()) / 100
            var taxe = eval(t * tva)
            var remise = parseInt($("#remise").val())
            $("#montantTva").val(taxe)
            $("#ttc").val(t + taxe)
            $("#net").val(t + taxe - remise)
            $("#amount").val($("#net").val())
            $("#venduPar").val(1)
            $("#codebarre").val("");
            $("#codebarre").focus();
          }
          else{
            $("#notif p").text('Quantité demandée indisponible pour le produit ' + label + ' (' + stock + ' exemplaires disponibles)');
            $("#notif p").css("color", "red");
          }
        }
        // $("#quantity").blur();
        return false;
      });


      // A chaque fois que le prix change
      $('.price').on('input change keyup',function(e){
        $("#notif p").text('');
        var id          = $(this).attr("name");
        var price       = parseInt($(this).val());
        var priceH      = document.getElementById('priceH[' + id + ']');
        var qte         = document.getElementById('quantity[' + id + ']').value;
        var sousTotal   = document.getElementById('sousTotal[' + id + ']');
        var total       = document.getElementById('total');
        priceH.value    = price;
        sousTotal.value = parseFloat(qte) * parseFloat(price);
        var st = $('.sousTotal');
        var tt = 0;
        for (var i = 0; i < st.length; i++) {
          tt += eval(st[i].value);
          console.log(st[i].value);
        }
        total.value = tt;
     });

      // A chaque fois que la quantité change
      $('.quantity').on('input change keyup',function(e){
        $("#notif p").text('');
        var id = $(this).attr("name");
        console.log(id);
        
        var qte         = $(this).val();
        var quantityH   = document.getElementById('quantityH[' + id + ']');
        var price       = document.getElementById('price[' + id + ']').value;
        var sousTotal   = document.getElementById('sousTotal[' + id + ']');
        var total       = document.getElementById('total');
        quantityH.value = qte;
        sousTotal.value = parseFloat(price) * parseFloat(qte);
        var st = $('.sousTotal');
        var tt = 0;
        for (var i = 0; i < st.length; i++) {
          tt += eval(st[i].value);
          console.log(st[i].value);
        }
        total.value = tt;
      });


      // A chaque fois que le prix change
      $('#myTable').on("change paste keyup", '.setPrice', function(e){       
        var id          = $(this).attr("id");
        var id          = $(this).attr("data");
        // console.log(data);
        var price       = $(this).val();
        var priceH      = $('#prices[' + id + ']');
        var qte         = document.getElementById('quantities[' + id + ']').value;
        var sousTotal   = document.getElementById('sousTotal[' + id + ']');
        var total       = $('#total');
        priceH.value    = price;
        sousTotal.value = parseFloat(qte) * parseFloat(price);
        $("#total").val($.fn.calculateTotal())
        var t      = eval($("#total").val())
        var tva    = eval($("#tva").val()) / 100
        var taxe   = eval(t * tva)
        var remise = parseInt($("#remise").val())
        $("#montantTva").val(taxe)
        $("#ttc").val(t + taxe)
        $("#net").val(t + taxe - remise)
        $("#amount").val($("#net").val())
      });

      // A chaque fois que la quantité change
      $('#myTable').on("change paste keyup", '.setQuantity', function(e){       
        var id        = $(this).attr("id");
        var id        = $(this).attr("data");
        var qte       = $(this).val();
        var quantityH = ('#quantities[' + id + ']');
        var price     = document.getElementById('prices[' + id + ']').value;
        var sousTotal = document.getElementById('sousTotal[' + id + ']');
        var total     = $('#total');
        // console.log("Id : " + id, "Quantité : " + qte, "Prix : " + price, "Sous-total : " + sousTotal.value);
        //console.log(qte, price);
        quantityH.value = qte;
        sousTotal.value = parseFloat(price) * parseFloat(qte);
        $("#total").val($.fn.calculateTotal())
        var t      = eval($("#total").val())
        var tva    = eval($("#tva").val()) / 100
        var taxe   = eval(t * tva)
        var remise = parseInt($("#remise").val())
        $("#montantTva").val(taxe)
        $("#ttc").val(t + taxe)
        $("#net").val(t + taxe - remise)
        $("#amount").val($("#net").val())
      });
     

      $('#myTable').on("click", '.icon-trash', function(e){
        var id = $(this);
        console.log($(this));
      });

      $('#myTable').on("change paste keyup", '.setQuantity', function(e){
      });

      
      $('#myForm').on('submit', function(){
        var client = parseInt($("#customer").val())
        var mode   = parseInt($("#mode").val())
        var amount = parseInt($("#amount").val())
        var net    = parseInt($("#net").val())
        // alert(client);
        if(amount < net && mode !== 5 && mode !== 3){
          $("#notif p").text('Vous n\'avez pas sélectionné de client pour cette vente. Le processus ne peut continuer.');
          return false;
        }
        if('' == client || null == client || undefined == client){
          $("#notif p").text('Vous n\'avez pas sélectionné de client pour cette vente. Le processus ne peut continuer.');
          return false;
        }
        $(this).attr('disabled', disabled);
      });

      $.fn.calculateTotal = function()
      {
        var sousTotaux = $('.sousTotal');
        var total = 0;
        for (let i = 0; i < sousTotaux.length; i++) {
          const element = sousTotaux[i];
          total += eval(element.value)
        }
        return total;
      }


      // Si le taux de la tva change, il faut mettre à jour 
      $("#tva").on("change", function(){
        var t = eval($("#total").val())
        var tva = eval($("#tva").val()) / 100
        var taxe = eval(t * tva)
        var remise = parseInt($("#remise").val())
        $("#montantTva").val(taxe)
        $("#ttc").val(t + taxe)
        $("#net").val(t + taxe - remise)
        $("#amount").val($("#net").val())
      })

      // A chaque fois que la remise change, il faut mettre à jour 
      $("#remise").on("change input keyup paste", function(){
        var t = eval($("#total").val())
        var tva = eval($("#tva").val()) / 100
        var taxe = eval(t * tva)
        var remise = parseInt(this.value)
        if(remise == undefined || remise == null || remise == 0){
          remise = 0;
        }
        $("#montantTva").val(taxe)
        $("#ttc").val(t + taxe)
        $("#net").val(t + taxe - remise)
        $("#amount").val($("#net").val())
      })

      $.fn.deleteProduct = function(id)
      {
        // Au clique sur le bouton de suppression dans la liste des produits de la commande en cours,
        // 1. On retire l'id du produit du tableau des ids de produit productsId
        productsId = $.grep(productsId, function(value){
          return value != id
        });

        // 2. On ajoute le produit retiré au select (menu déroulant) des produits dans la boîte modal d'ajout de produit
        $.ajax({
          url: '/ventes/select-product/' + id + '/' + storeId,
          type: 'GET',
          dataType: 'json',
          success: function (result) { 
            console.log(result);
            $('#products option:last').after('<option value="' + result.id + '">' + result.reference + ' --- ' + result.label + '</option>');
          },
          error: function (xhr, status, error) {
            console.log(error)
          }
        });
        
        // 3. On supprime la ligne (l'élément tr) du produit du tableau visible dans le navigateur
        $('#tableLineId' + id).remove()

        // 4. On calcule à nouveau le total de la commande
        $("#total").val($.fn.calculateTotal())
        var t = eval($("#total").val())
        var tva = eval($("#tva").val()) / 100
        var taxe = eval(t * tva)
        var remise = parseInt($("#remise").val())
        $("#montantTva").val(taxe)
        $("#ttc").val(t + taxe)
        $("#net").val(t + taxe - remise)
        $("#amount").val($("#net").val())
      }

    });

    function submitForm(btn) {
      // disable the button
      btn.disabled = true;
      // submit the form    
      btn.form.submit();
    }
  </script>
  <script src="{{ asset('js/select2.min.js') }}"></script>
  <script>
    $(document).ready(function() {
      $('.js-example-basic-single').select2();
    });
  </script>
  <script src="{{ asset('build/app.js') }}"></script>
{% endblock %}
