{% extends 'base.html.twig' %}


{% block stylesheets %}
  <link href="{{ asset('css/select2.min.css') }}" rel="stylesheet" />
{% endblock %}


{% block title %}
  Modification de la vente du N°{{ commande.reference }} du {{ commande.date|date('d-m-Y') }}
{% endblock %}


{% block notifications %}
  {% for message in app.flashes('success') %}
    <div class="alert alert-success fade in">
      <a href="#" class="close" data-dismiss="alert">&times;</a>
      <strong>Succès</strong><br>
      {{ message|raw }}
    </div>
  {% endfor %}
  {% for message in app.flashes('warning') %}
    <div class="alert alert-warning fade in">
      <a href="#" class="close" data-dismiss="alert">&times;</a>
      <strong>Attention !!!</strong><br>
      {{ message|raw }}
    </div>
  {% endfor %}
  {% for message in app.flashes('danger') %}
    <div class="alert alert-danger fade in">
      <a href="#" class="close" data-dismiss="alert">&times;</a>
      <strong>Erreur</strong><br>
      {{ message|raw }}
    </div>
  {% endfor %}
{% endblock %}



{% block body %}
  <a href="javascript:history.back()" class="btn btn-primary btn-sm">Retour</a>
  <h2 class="animate-box" data-animate-effect="fadeInLeft">Modification de la vente N°<strong>{{ commande.reference }}</strong> du <strong>{{ commande.date|date('d-m-Y') }}</strong></h2>
  <div class="row">
    <div class="col-md-4">
      <h3>Client</h3>
      {% if commande.customer is not empty %}
        <strong>Nom Client:</strong>
        <span>{{ commande.customer.firstname }} {{ commande.customer.lastname }}</span><br>
        <strong>Numéro de téléphone client:</strong>
        <span>{{ commande.customer.phoneNumber }}</span><br>
        <strong>Type du client:</strong>
        <span>
          {% if commande.customer.type %}
            {{ commande.customer.type.type }}
          {% endif %}
        </span><br>
      {% else %}
        Vente anomyne
      {% endif %}
    </div>
    <div class="col-md-4">
      <h3>Commande</h3>
      <strong>Date de la commande:</strong>
      <span>{{ commande.date|date('d-m-Y') }}</span><br>
      <strong>Référence:</strong>
      <span>{{ commande.reference }}</span><br>
      <strong>Montant TTC:</strong>
      <span>{{ commande.netAPayer|number_format(0, ',', ' ') }} F</span><br>
    </div>
  </div><br><br>
  <div class="row">
  <form class="text-sm">
    <legend>Ajoute de produit au pannier</legend>
    <div class="row">
      <div class="form-group col-md-3 col-sm-3 col-xs-3">
        <label for="codebarre" class="col-form-label">Code barre</label>
        <input type="text" name="codebarre" class="form-control" id="codebarre">
      </div>
      <div class="form-group col-md-3 col-sm-3 col-xs-3">
        <label for="reference" class="col-form-label">Référence de produit</label>
        <input type="text" name="reference" class="form-control" id="reference" value="PR">
      </div>
      <div class="form-group col-md-6 col-sm-6 col-xs-6">
        <label for="products" class="col-form-label">Produits</label>
        {# <select name="products" id="products" class="form-control"> #}
        <select name="products" id="products" class="form-control mb-4 js-example-basic-single">
          <option value="">Sélectionnez un produit</option>
          {% for product in stocks if product.quantity > 0 %}
            <option value="{{ product.product.id }}">{{ product.product.reference }} --- {{ product.product.label }}</option>
          {% endfor %}
        </select>
      </div>
    </div>
    <div class="row">
      <div class="form-group col-md-4 col-sm-4 col-xs-4">
        <label for="venduPar" class="col-form-label">Vente par:</label>
        <select name="venduPar" id="venduPar" class="form-control" required>
          <option value="1" selected>Unité</option>
          <option value="2">Carton / paquet</option>
        </select>
      </div>
      <div class="form-group col-md-4 col-sm-4 col-xs-4">
        <label for="quantity" class="col-form-label">Quantité:</label>
        <input type="number" class="form-control" id="quantity" value="1" min="1" required>
      </div>
      <div class="form-group col-md-4 col-sm-4 col-xs-4">
        <label for="price" class="col-form-label">Prix unitaire:</label>
        <input type="number" class="form-control" id="price" value="" required>
      </div>
    </div>
    <div class="form-group text-center"><div id="notif"><p style="color: red; font-weight: bolder"></p></div></div>
    <div class="modal-footer">
      <input type="hidden" name="productId" id="productId" value="">
      <input type="hidden" name="averagePurchasePrice" id="averagePurchasePrice" value="">
      <input type="hidden" name="averageSellingPrice" id="averageSellingPrice" value="">
      <input type="hidden" name="averagePackageSellingPrice" id="averagePackageSellingPrice" value="">
      <input type="hidden" name="prixUnitaire" id="prixUnitaire" value="">
      <input type="hidden" name="prixUnitaireCarton" id="prixUnitaireCarton" value="">
      <input type="hidden" name="nombreUnite" id="nombreUnite" value="">
      <input type="hidden" name="productLabel" id="productLabel" value="">
      <input type="hidden" name="productStock" id="productStock" value="">
      <input type="hidden" name="storeId" id="storeId" value="{{ store.id }}">
      <button class="btn-lg btn-primary" id="add_product">Ajouter</button>
    </div>
  </form>
  </div>
  <div class="row">
    <form action="" method="post">
      <div class="table-responsive">
        {% set i = 0 %}
        <table class="table" id="myTable">
          <thead>
            <tr>
              {# <th>#</th> #}
              <th>Référence</th>
              <th>Désignation</th>
              <th>Quantité</th>
              <th>Prix Unitaire</th>
              <th>Sous-total</th>
              <th width="5%">Actions</th>
            </tr>
          </thead>
          <tbody>
            {% set total = 0 %}
            {% for item in commande.product %}
              {% set i = i + 1 %}
              <tr id="tableLineId{{item.product.id}}">
                {# <td>{{ i }}</td> #}
                <td>{{ item.product.reference }}</td>
                <td>
                  {{ item.product.label }}
                </td>
                <td>
                  <input type="number" class="quantity" name="{{item.product.id}}" id="quantities[{{item.product.id}}]" value="{{ item.quantity }}" required>
                  <input type="hidden" name="quantitiesH[{{item.product.id}}]" id="quantitiesH[{{item.product.id}}]" value="{{ item.quantity }}">
                </td>
                <td>
                  <input type="number" class="price" name="{{item.product.id}}" id="prices[{{item.product.id}}]" value="{{ item.unitPrice }}" required>
                  <input type="hidden" name="pricesH[{{item.product.id}}]" id="pricesH[{{item.product.id}}]" value="{{ item.unitPrice }}">
                </td>
                <td>
                  <input type="number" class="sousTotal" name="{{item.product.id}}" id="sousTotal[{{item.product.id}}]" value="{{ item.subtotal }}" readonly>
                  <input type="hidden" name="products[]" value="{{item.product.id}}">
                </td>
                <td><i class="icon-trash" id="' + id + '" title="Retirer {{ item.product.label }} de la vente en cours" onclick="$.fn.deleteProduct({{item.product.id}})"></i></td>
              </tr>
              {# <input type="hidden" name="oldProductId" id="oldProductId" value="{{item.product.id}}"> #}
            {% endfor %}
          </tbody>
          <tfoot>
            <tr>
              <th colspan="4">Montant HT</th>
              <th><input type="text" id="total" name="total" value="{{ commande.totalAmount }}" readonly required></th>
            </tr>
            <tr>
              <th colspan="4">Valeur TVA</th>
              <th><input type="text" id="tva" name="tva" value="{{ commande.tva }}" readonly required></th>
            </tr>
            <tr>
              <th colspan="4">Montant TTC</th>
              <th><input type="text" id="ttc" name="ttc" value="{{ commande.montantTtc }}" readonly required></th>
            </tr>
            <tr>
              <th colspan="4">Remise</th>
              <th><input type="text" id="remise" name="remise" value="{{ commande.remise }}" required></th>
            </tr>
            <tr>
              <th colspan="4">Net à payer</th>
              <th><input type="text" id="net" name="net" value="{{ commande.netAPayer }}" readonly required></th>
            </tr>
          </tfoot>
        </table>
        <input type="hidden" id="storeId" name="storeId" value="{{ commande.store.id }}"/>
        <input type="hidden" name="token" value="{{ csrf_token('modifier_vente') }}"/>
        <button class="btn-lg btn-default">Appliquer les modifications</button>
      </div><br><br>
    </form>
  </div>
{% endblock %}


{% block javascript %}
  <script>
    $(document).ready(function(){
      var total = $("#total").val();
      var productsId = [];
      var storeId = $("#storeId").val();
      $('#products').on('change',function(e){
        $.ajax({
          url: '/ventes/select-product/' + this.value + '/' + storeId,
          type: 'GET',
          dataType: 'json',
          success: function (result) { 
              var vente_par = $("#venduPar").val();
              $("#price").val(result.unit_price);
              if(vente_par == 2){
                $("#price").val(result.unit_price * result.unite);
              }          
              $("#productId").val(result.id);
              $("#reference").val(result.reference);
              $("#productLabel").val(result.label);
              $("#prixUnitaire").val(result.unit_price);
              $("#averageSellingPrice").val(result.average_selling_price);
              $("#averagePurchasePrice").val(result.average_purchase_price);
              $("#averagePackageSellingPrice").val(result.average_package_selling_price);
              $("#nombreUnite").val(result.unite);
              $("#productStock").val(result.stock);
              $("#quantity").val(1);
              $("#quantity").focus();
              $("#quantity").select();
              $("#notif p").text(result.reference + ' --- ' + result.label + ': ' + result.stock + ' disponibles');
              $("#notif p").css("color", "green");
          },
          error: function (xhr, status, error) {
            $("#products").val(null);
            $("#price").val(null);
            $("#quantity").val(1);
            $("#notif p").text('Désolé ! Le serveur de données a rencontré un problème.');
            $("#notif p").css("color", "red");
            console.log(error)
          }
        });
      });


      $("#reference").on("paste input", function(){
        if($(this).val().length >= 5){
          var ref = $(this).val();
          $.ajax({
            url: '/ventes/select-product-by-reference/' + ref + '/' + storeId,
            type: 'GET',
            dataType: 'json',
            success: function (result) { 
              if(result.length != 0 && result.stock != 0) 
              {
                var vente_par = $("#venduPar").val();
                $("#price").val(result.unit_price);
                if(vente_par == 2){
                  $("#price").val(result.unit_price * result.unite);
                } 
                $("#productId").val(result.id);
                $("#productLabel").val(result.label);
                $("#prixUnitaire").val(result.unit_price);
                $("#averageSellingPrice").val(result.average_selling_price);
                $("#averagePurchasePrice").val(result.average_purchase_price);
                $("#averagePackageSellingPrice").val(result.average_package_selling_price);
                $("#nombreUnite").val(result.unite);
                $("#productStock").val(result.stock);
                $("#quantity").val(1);
                $("#quantity").focus();
                $("#quantity").select();
                $('#products option[value="'+ result.id +'"]').attr('selected', 'selected');
                $("#notif p").text(result.reference + ' --- ' + result.label + ': ' + result.stock + ' disponibles');
                $("#notif p").css("color", "green");
              } 
              else if(result.length != 0 && result.stock == 0) {
                $("#notif p").text('Stock de (' + result.label + ') épuisé.');
                $("#notif p").css("color", "red");
              } 
              else{
                $("#notif p").text('Référence (' + ref + ') incorrecte.');
                $("#notif p").css("color", "red");
              }
            },
            error: function (xhr, status, error) {
              $("#products").val(null);
              $("#price").val(null);
              $("#quantity").val(1);
              $("#notif p").text('Référence (' + ref + ') incorrecte.');
              $("#notif p").css("color", "red");
              console.log(error)
            }
          });
        } else {
          $(".nomFr").val('');
          $(".pnomFr").val('');
          $(".dateNaissance").val('');
        }
      });

      var barcode="";
      $('#codebarre').on({
          keydown: function(e) { 
            // typed_into = true;             
            var code = (e.keyCode ? e.keyCode : e.which);
            if(code==13){
              console.log(barcode);
              this.value = barcode
              $.ajax({
                url: '/ventes/select-product-by-barcode/' + barcode + '/' + storeId,
                type: 'GET',
                dataType: 'json',
                success: function (result) { 
                  if(result.length !== 0 && result.stock !== 0 && result.reference != undefined) {
                    // if(jQuery.inArray(id, productsId) !== -1){
                    //   $("#notif p").text('Ce produit (' + label + ') a déjà été ajouté à la commande en cours');
                    //   $("#notif p").css("color", "red");
                    // }
                    // else{
                      
                    // }
                    var vente_par = $("#venduPar").val();
                    $("#price").val(result.unit_price);
                    if(vente_par == 2){
                      $("#price").val(result.unit_price * result.unite);
                    } 
                    $("#reference").val(result.reference);
                    $("#productId").val(result.id);
                    $("#productLabel").val(result.label);
                    $("#prixUnitaire").val(result.unit_price);
                    $("#averageSellingPrice").val(result.average_selling_price);
                    $("#averagePurchasePrice").val(result.average_purchase_price);
                    $("#averagePackageSellingPrice").val(result.average_package_selling_price);
                    $("#nombreUnite").val(result.unite);
                    $("#productStock").val(result.stock);
                    $("#quantity").val(1);
                    $("#quantity").focus();
                    $("#quantity").select();
                    $('#products option[value="'+ result.id +'"]').attr('selected', 'selected');
                    $("#notif p").text(result.reference + ' --- ' + result.label + ': ' + result.stock + ' disponibles');
                    $("#notif p").css("color", "green");
                  } 
                  else if(result.length != 0 && result.stock == 0) {
                    $("#notif p").text('Stock de (' + result.label + ') épuisé.');
                    $("#notif p").css("color", "red");
                  } 
                  else{
                    $("#notif p").text('Code barre incorrect ou inexistant.');
                    $("#notif p").css("color", "red");
                  }
                },
                error: function (xhr, status, error) {
                  $("#products").val(null);
                  $("#price").val(null);
                  $("#quantity").val(1);
                  $("#notif p").text('Référence (' + ref + ') incorrecte.');
                  $("#notif p").css("color", "red");
                }
              });
              barcode = "";
            }
            else{
              barcode=barcode+String.fromCharCode(code);
            }
          },
          // keydown: function(){ alert('test'); },
          change: function() {
              if (typed_into) {
                  alert('type');
                  typed_into = false; //reset type listener
              } else {
                  alert('not type');
              }
          }
      });

      // A chaque fois que la quantité change
      $('#add_product').on('click', function(e){
        var id                         = parseInt($("#productId").val());
        var reference                  = $("#reference").val();
        var unite                      = parseInt($("#nombreUnite").val());
        var venduPar                   = parseInt($("#venduPar").val());
        var label                      = $("#productLabel").val();
        var stock                      = parseInt($("#productStock").val());
        var price                      = parseInt($("#price").val());
        var sellingPrice               = parseInt($("#prixUnitaire").val());
        var quantity                   = parseFloat($("#quantity").val());        
        var averageSellingPrice        = parseInt($("#averageSellingPrice").val());        
        var averagePurchasePrice       = parseInt($("#averagePurchasePrice").val());        
        var averagePackageSellingPrice = parseInt($("#averagePackageSellingPrice").val());        
        // console.log(averageSellingPrice, averagePackageSellingPrice);        
        
        if(price == undefined || price == null || price == 0){
          $("#notif p").text('Le prix de vente n\'a pas été précisé.');
          $("#notif p").css("color", "red");
          return false;
        }
        // if(price > sellingPrice && unite == 1){
        //   $("#notif p").text('Le prix de vente est plus élevé que la normale (' + sellingPrice + 'F).');
        //   $("#notif p").css("color", "red");
        //   return false;
        // }
        if(price < averageSellingPrice && unite == 1){
          $("#notif p").text(label + ' ne peut être vendu en deça de ' + averageSellingPrice + 'F.');
          $("#notif p").css("color", "red");
          
          return false;
        }
        if(price < averagePurchasePrice && unite == 1){
          $("#notif p").text(label + ' ne peut être vendu en deça de ' + averagePurchasePrice + 'F.');
          $("#notif p").css("color", "red");
          console.log(price, averageSellingPrice, averagePurchasePrice);
          
          return false;
        }
        if(unite != 1){
          if(price < averageSellingPrice && venduPar == 1){
            $("#notif p").text(label + ' ne peut être vendu en deça de ' + averageSellingPrice + 'F.');
            $("#notif p").css("color", "red");
            return false;
          }
          if(price < averagePackageSellingPrice && venduPar == 2){
            $("#notif p").text(label + ' ne peut être vendu en deça de ' + averagePackageSellingPrice + 'F.');
            $("#notif p").css("color", "red");
            return false;
          }
        }
        if(quantity == undefined || quantity == null || quantity == 0){
          $("#notif p").text('La quantité à vendre n\'a pas été précisée.');
          $("#notif p").css("color", "red");
          return false;
        }
        if((quantity % 0.5) != 0){
          $("#notif p").text('Quantité saisie incorrecte. Veuillez rééssayer');
          $("#notif p").css("color", "red");
          return false;
        }
        // return false;

        if(jQuery.inArray(id, productsId) !== -1){
          $("#notif p").text('Ce produit (' + label + ') a déjà été ajouté à la commande en cours');
          $("#notif p").css("color", "red");
          // return undefined;
          // throw new Error("Impossible");
        }
        else{
          if(quantity <= stock){
            productsId.push(id);
            console.log(productsId);
            var sousTotal = quantity * price; 
            var vente_par = unite == 1 ? 1 : venduPar;               
            // $("#myTable tbody tr:last").after('<tr><td>' + reference + '</td><td>' + label + '</td><td><input type="number" class="quantity" id="quantities[' + id + ']" name="quantities[' + id + ']" value="' + quantity + '" required readonly></td><td><input type="number" class="price" id="prices[' + id + ']" name="prices[' + id + ']" value="' + price + '" required readonly></td><td><input type="number" class="sousTotal" id="sousTotal[' + id + ']" name="sousTotal[' + id + ']" value="' + sousTotal + '" readonly><input type="hidden" name="products[]" value="' + id + '"></td><td></td></tr>');
            $("#myTable tbody tr:last").after('<tr id="tableLineId' + id + '"><td>' + reference + '</td><td>' + label + '</td><td><input type="number" class="quantity" id="quantities[' + id + ']" name="' + id + '" value="' + quantity + '" required><input type="hidden" name="quantitiesH[' + id + ']" id="quantitiesH[' + id + ']" value="' + quantity + '"></td><td><input type="number" class="price" id="prices[' + id + ']" name="prices[' + id + ']" value="' + price + '" required><input type="hidden" name="pricesH[' + id + ']" id="pricesH[' + id + ']" value="' + price + '"></td><td><input type="number" class="sousTotal" id="sousTotal[' + id + ']" name="sousTotal[' + id + ']" value="' + sousTotal + '" readonly><input type="hidden" id="ventePar[' + id + ']" name="ventePar[' + id + ']" value="' + vente_par + '"><input type="hidden" name="products[]" value="' + id + '"></td><td><i class="icon-trash" id="' + id + '" title="Retirer ' + label + ' de la vente en cours" onclick="$.fn.deleteProduct(' + id + ')"></i></td></tr>');
            $("#products").val(null);
            $("#reference").val("PR");
            $("#price").val(null);
            $("#quantity").val(1);
            $('#products option[value="'+ id +'"]').remove();
            $("#notif p").text('');
            $("#total").val($.fn.calculateTotal())
            var t = eval($("#total").val())
            var tva = eval($("#tva").val()) / 100
            var taxe = eval(t * tva)
            var remise = parseInt($("#remise").val())
            $("#montantTva").val(taxe)
            $("#ttc").val(t + taxe)
            $("#net").val(t + taxe - remise)
            $("#venduPar").val(1)
            $("#codebarre").val("");
            $("#codebarre").focus();
          }
          else{
            $("#notif p").text('Quantité demandée indisponible pour le produit ' + label + ' (' + stock + ' exemplaires disponibles)');
            $("#notif p").css("color", "red");
          }
        }
        // $("#quantity").blur();
        return false;
      });


    //   // A chaque fois que le prix change
    //   $('.price').on('input change keyup',function(e){
    //     $("#notif p").text('');
    //     var id          = $(this).attr("name");
    //     var price       = parseInt($(this).val());
    //     var priceH      = document.getElementById('priceH[' + id + ']');
    //     var qte         = document.getElementById('quantity[' + id + ']').value;
    //     var sousTotal   = document.getElementById('sousTotal[' + id + ']');
    //     var total       = document.getElementById('total');
    //     priceH.value    = price;
    //     sousTotal.value = parseFloat(qte) * parseFloat(price);
    //     var st = $('.sousTotal');
    //     var tt = 0;
    //     for (var i = 0; i < st.length; i++) {
    //       tt += eval(st[i].value);
    //       console.log(st[i].value);
    //     }
    //     total.value = tt;
    //  });

    //   // A chaque fois que la quantité change
    //   $('.quantity').on('input change keyup',function(e){
    //     $("#notif p").text('');
    //     var id = $(this).attr("name");
    //     console.log(id);
        
    //     var qte         = $(this).val();
    //     var quantityH   = document.getElementById('quantityH[' + id + ']');
    //     var price       = document.getElementById('price[' + id + ']').value;
    //     var sousTotal   = document.getElementById('sousTotal[' + id + ']');
    //     var total       = document.getElementById('total');
    //     quantityH.value = qte;
    //     sousTotal.value = parseFloat(price) * parseFloat(qte);
    //     var st = $('.sousTotal');
    //     var tt = 0;
    //     for (var i = 0; i < st.length; i++) {
    //       tt += eval(st[i].value);
    //       console.log(st[i].value);
    //     }
    //     total.value = tt;
    //   });

      $.fn.deleteProduct = function(id)
      {
        console.log(id);

        // 3. On supprime la ligne (l'élément tr) du produit du tableau visible dans le navigateur
        $('#tableLineId' + id).remove()

        // 4. On calcule à nouveau le total de la commande
        $("#total").val($.fn.calculateTotal())
        var t = eval($("#total").val())
        var tva = eval($("#tva").val()) / 100
        var taxe = eval(t * tva)
        var remise = parseInt($("#remise").val())
        $("#montantTva").val(taxe)
        $("#ttc").val(t + taxe)
        $("#net").val(t + taxe - remise)
      }

      $.fn.calculateTotal = function()
      {
        var sousTotaux = $('.sousTotal');
        var total = 0;
        for (let i = 0; i < sousTotaux.length; i++) {
          const element = sousTotaux[i];
          total += eval(element.value)
        }

        console.log("Le total fait " + total);
        return total;
      }

      // A chaque fois que le prix change
      $('.price').on('input',function(e){
        var id          = $(this).attr("name");
        var unitPrice   = $(this).val();
        var price       = document.getElementById('prices[' + id + ']');
        var priceH      = document.getElementById('pricesH[' + id + ']');
        var qte         = document.getElementById('quantities[' + id + ']').value;
        var sousTotal   = document.getElementById('sousTotal[' + id + ']');
        var total       = document.getElementById('total');
        var tva         = document.getElementById('tva').value;
        var remise      = document.getElementById('remise').value;
        price.value     = unitPrice;
        priceH.value    = unitPrice;
        sousTotal.value = parseFloat(qte) * parseFloat(unitPrice);
        var st = $('.sousTotal');
        var tt = 0;
        for (var i = 0; i < st.length; i++) {
          tt += eval(st[i].value);
        }
        tt = eval(tt);
        tva = eval(tva);
        var montantTva = (tt * tva)/100
        total.value = tt;
        $("#ttc").val(tt + montantTva);
        $("#net").val(tt + montantTva - remise);
        console.log(tt);
        
      });

      // A chaque fois que la quantité change
      $('.quantity').on('input',function(e){
        var id = $(this).attr("name");
        console.log(id);
        
        var qte         = $(this).val();
        var quantity    = document.getElementById('quantities[' + id + ']');
        var quantityH   = document.getElementById('quantitiesH[' + id + ']');
        var price       = document.getElementById('prices[' + id + ']').value;
        var sousTotal   = document.getElementById('sousTotal[' + id + ']');
        var total       = document.getElementById('total');
        var tva         = document.getElementById('tva').value;
        var remise      = document.getElementById('remise').value;
        quantity.value  = qte;
        quantityH.value = qte;
        sousTotal.value = parseFloat(price) * parseFloat(qte);
        var st = $('.sousTotal');
        var tt = 0;
        for (var i = 0; i < st.length; i++) {
          tt += eval(st[i].value);
          console.log(st[i].value);
        }
                tt = eval(tt);
        tva = eval(tva);
        var montantTva = (tt * tva)/100
        total.value = tt;
        $("#ttc").val(tt + montantTva);
        $("#net").val(tt + montantTva - remise);

      });

      $("#remise").on("input", function(){
        var remise = eval($(this).val())
        var ttc = eval($("#ttc").val()); 
        if(remise == null || remise == undefined){
          remise = 0
        } 
        $("#net").val(eval(ttc - remise));
      })
    });
  </script>
  <script src="{{ asset('js/select2.min.js') }}"></script>
  <script>
    $(document).ready(function() {
      $('.js-example-basic-single').select2();
    });
  </script>
{% endblock %}
